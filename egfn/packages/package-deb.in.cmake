project(PACKAGE-@TARGET_TYPE@)
cmake_minimum_required(VERSION 2.8)

message(STATUS "${PROJECT_NAME}")

set(CPACK_PACKAGE_VERSION_MAJOR "@PROJECT_MAJOR_VERSION@")
set(CPACK_PACKAGE_VERSION_MINOR "@PROJECT_MINOR_VERSION@")
set(CPACK_PACKAGE_VERSION_PATCH "@PROJECT_PATCH_VERSION@")
set(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")

set(CPACK_PACKAGE_VENDOR "Eg of Examples")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "@PROJECT_BRIEF@")
set(CPACK_PACKAGE_DESCRIPTION_FILE "@PROJECT_SOURCE_DIR@/README.txt")
set(CPACK_RESOURCE_FILE_README "@PROJECT_SOURCE_DIR@/README.txt")
set(CPACK_RESOURCE_FILE_WELCOME "@PROJECT_SOURCE_DIR@/README.txt")
set(CPACK_RESOURCE_FILE_LICENSE "@PROJECT_SOURCE_DIR@/copyright.txt")
set(CPACK_PACKAGE_CONTACT "eg@example.com")
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "http:\\\\\\\\www.example.com")

set(MYCPACK_PACKAGE_BASENAME "lib@PROJECT_NAME@")
if (${PROJECT_NAME} STREQUAL "PACKAGE-dev")
	set(CPACK_PACKAGE_NAME "${MYCPACK_PACKAGE_BASENAME}-dev")
	install(FILES "@TARGET_LIBS@" DESTINATION "lib")
	install(DIRECTORY "@PROJECT_SOURCE_DIR@/include/@PROJECT_NAME@/" DESTINATION "include/@PROJECT_NAME@")
	install(FILES "@PROJECT_BINARY_DIR@/version.h" DESTINATION "include/@PROJECT_NAME@")
	if (EXISTS "@PROJECT_BINARY_DIR@/docs/")
		install(DIRECTORY "@PROJECT_BINARY_DIR@/docs/" DESTINATION "share/doc/lib@PROJECT_NAME@")
	endif()
	set(CPACK_DEBIAN_PACKAGE_DEPENDS "${MYCPACK_PACKAGE_BASENAME} (>= ${CPACK_PACKAGE_VERSION}) | ${MYCPACK_PACKAGE_BASENAME}@EG_PACKAGE_DEBUG_CONST@ (>= ${CPACK_PACKAGE_VERSION})")
	set(CPACK_DEBIAN_PACKAGE_SECTION "Libraries - Development")
	set(CPACK_RPM_PACKAGE_GROUP "Development/Libraries")
else()
	set(CPACK_PACKAGE_NAME "${MYCPACK_PACKAGE_BASENAME}@EG_PACKAGE_DEBUG@")
	install(FILES "@TARGET_LIBS@.@PROJECT_VERSION@" "@TARGET_LIBS@.@PROJECT_MAJOR_VERSION@" DESTINATION "lib")
	install(DIRECTORY "@PROJECT_SOURCE_DIR@/resources/" DESTINATION "etc/@PROJECT_NAME@")
	install(FILES "@PROJECT_SOURCE_DIR@/README.txt" "@PROJECT_SOURCE_DIR@/copyright.txt" DESTINATION "share/doc/lib@PROJECT_NAME@")
	set(CPACK_DEBIAN_PACKAGE_DEPENDS "@PROJECT_PACKAGE_DEPENDENCIES_DEBIAN@")
	set(CPACK_DEBIAN_PACKAGE_SECTION "Libraries")
	set(CPACK_RPM_PACKAGE_GROUP "Development/Libraries")

	if ("@EG_PACKAGE_DEBUG@" STREQUAL "")
		set(CPACK_DEBIAN_PACKAGE_CONFLICTS "${MYCPACK_PACKAGE_BASENAME}@EG_PACKAGE_DEBUG_CONST@")
	else()
		set(CPACK_DEBIAN_PACKAGE_CONFLICTS "${MYCPACK_PACKAGE_BASENAME}")
	endif()
endif()
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_@PROJECT_VERSION@_${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}")

set(CPACK_RPM_PACKAGE_REQUIRES "${CPACK_DEBIAN_PACKAGE_DEPENDS}")
string(REPLACE "(" "" CPACK_RPM_PACKAGE_REQUIRES "${CPACK_RPM_PACKAGE_REQUIRES}")
string(REPLACE ")" "" CPACK_RPM_PACKAGE_REQUIRES "${CPACK_RPM_PACKAGE_REQUIRES}")

set(CPACK_GENERATOR "@CPACK_GENERATOR@")

include(CPack)

